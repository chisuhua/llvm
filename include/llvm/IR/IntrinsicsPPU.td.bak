//===- IntrinsicsPPU.td - Defines PPU intrinsics -------*- tablegen -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file defines all of the PPU-specific intrinsics.
//
//===----------------------------------------------------------------------===//

let TargetPrefix = "ppu" in {

//===----------------------------------------------------------------------===//
// Atomics

class PPUMaskedAtomicRMW32Intrinsic
    : Intrinsic<[llvm_i32_ty],
                [llvm_anyptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty],
                [IntrArgMemOnly, NoCapture<0>, ImmArg<3>]>;

class PPUMaskedAtomicRMW32WithSextIntrinsic
    : Intrinsic<[llvm_i32_ty],
                [llvm_anyptr_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty,
                 llvm_i32_ty],
                [IntrArgMemOnly, NoCapture<0>, ImmArg<4>]>;

def int_ppu_masked_atomicrmw_xchg_i32 : PPUMaskedAtomicRMW32Intrinsic;
def int_ppu_masked_atomicrmw_add_i32  : PPUMaskedAtomicRMW32Intrinsic;
def int_ppu_masked_atomicrmw_sub_i32  : PPUMaskedAtomicRMW32Intrinsic;
def int_ppu_masked_atomicrmw_nand_i32 : PPUMaskedAtomicRMW32Intrinsic;
def int_ppu_masked_atomicrmw_max_i32  : PPUMaskedAtomicRMW32WithSextIntrinsic;
def int_ppu_masked_atomicrmw_min_i32  : PPUMaskedAtomicRMW32WithSextIntrinsic;
def int_ppu_masked_atomicrmw_umax_i32 : PPUMaskedAtomicRMW32Intrinsic;
def int_ppu_masked_atomicrmw_umin_i32 : PPUMaskedAtomicRMW32Intrinsic;

def int_ppu_masked_cmpxchg_i32
    : Intrinsic<[llvm_i32_ty], [llvm_anyptr_ty, llvm_i32_ty, llvm_i32_ty,
                                llvm_i32_ty, llvm_i32_ty],
                [IntrArgMemOnly, NoCapture<0>, ImmArg<4>]>;

class PPUMaskedAtomicRMW64Intrinsic
    : Intrinsic<[llvm_i64_ty],
                [llvm_anyptr_ty, llvm_i64_ty, llvm_i64_ty, llvm_i64_ty],
                [IntrArgMemOnly, NoCapture<0>, ImmArg<3>]>;

class PPUMaskedAtomicRMW64WithSextIntrinsic
    : Intrinsic<[llvm_i64_ty],
                [llvm_anyptr_ty, llvm_i64_ty, llvm_i64_ty, llvm_i64_ty,
                 llvm_i64_ty],
                [IntrArgMemOnly, NoCapture<0>, ImmArg<4>]>;

def int_ppu_masked_atomicrmw_xchg_i64 : PPUMaskedAtomicRMW64Intrinsic;
def int_ppu_masked_atomicrmw_add_i64  : PPUMaskedAtomicRMW64Intrinsic;
def int_ppu_masked_atomicrmw_sub_i64  : PPUMaskedAtomicRMW64Intrinsic;
def int_ppu_masked_atomicrmw_nand_i64 : PPUMaskedAtomicRMW64Intrinsic;
def int_ppu_masked_atomicrmw_max_i64  : PPUMaskedAtomicRMW64WithSextIntrinsic;
def int_ppu_masked_atomicrmw_min_i64  : PPUMaskedAtomicRMW64WithSextIntrinsic;
def int_ppu_masked_atomicrmw_umax_i64 : PPUMaskedAtomicRMW64Intrinsic;
def int_ppu_masked_atomicrmw_umin_i64 : PPUMaskedAtomicRMW64Intrinsic;

def int_ppu_masked_cmpxchg_i64
    : Intrinsic<[llvm_i64_ty], [llvm_anyptr_ty, llvm_i64_ty, llvm_i64_ty,
                                llvm_i64_ty, llvm_i64_ty],
                [IntrArgMemOnly, NoCapture<0>, ImmArg<4>]>;

//===----------------------------------------------------------------------===//
// Vector extension

def int_ppu_setvl : Intrinsic<[llvm_i32_ty], [llvm_i32_ty], [IntrNoMem]>;

def int_ppu_vadd : Intrinsic<[llvm_nxv1i32_ty],
                               [llvm_nxv1i32_ty, llvm_nxv1i32_ty],
                               [IntrNoMem]>;

def int_ppu_vsub : Intrinsic<[llvm_nxv1i32_ty],
                               [llvm_nxv1i32_ty, llvm_nxv1i32_ty],
                               [IntrNoMem]>;


def int_ppu_vmul : Intrinsic<[llvm_nxv1i32_ty],
                               [llvm_nxv1i32_ty, llvm_nxv1i32_ty],
                               [IntrNoMem]>;


def int_ppu_vand : Intrinsic<[llvm_nxv1i32_ty],
                               [llvm_nxv1i32_ty, llvm_nxv1i32_ty],
                               [IntrNoMem]>;


def int_ppu_vor : Intrinsic<[llvm_nxv1i32_ty],
                               [llvm_nxv1i32_ty, llvm_nxv1i32_ty],
                               [IntrNoMem]>;

def int_ppu_vxor : Intrinsic<[llvm_nxv1i32_ty],
                               [llvm_nxv1i32_ty, llvm_nxv1i32_ty],
                               [IntrNoMem]>;

def int_ppu_vlw : Intrinsic<[llvm_nxv1i32_ty],
                              [llvm_ptr32_ty],
                              [IntrReadMem]>;
def int_ppu_vsw : Intrinsic<[],
                              [llvm_ptr32_ty, llvm_nxv1i32_ty],
                              [IntrWriteMem]>;

def int_ppu_vmpopcnt : Intrinsic<[llvm_i32_ty],
                               [llvm_nxv1i32_ty],
                               [IntrNoMem]>;

def int_ppu_vmfirst : Intrinsic<[llvm_i32_ty],
                               [llvm_nxv1i32_ty],
                               [IntrNoMem]>;

} // TargetPrefix = "ppu"
