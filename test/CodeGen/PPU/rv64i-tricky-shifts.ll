; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py

; These tests must not compile to sllw/srlw/sraw, as this would be semantically
; incorrect in the case that %b holds a value between 32 and 63. Selection
; patterns might make the mistake of assuming that a (sext_inreg foo, i32) can
; only be produced when sign-extending an i32 type.

define i64 @tricky_shl(i64 %a, i64 %b) nounwind {
  %1 = shl i64 %a, %b
  %2 = shl i64 %1, 32
  %3 = ashr i64 %2, 32
  ret i64 %3
}

define i64 @tricky_lshr(i64 %a, i64 %b) nounwind {
  %1 = and i64 %a, 4294967295
  %2 = lshr i64 %1, %b
  ret i64 %2
}

define i64 @tricky_ashr(i64 %a, i64 %b) nounwind {
  %1 = shl i64 %a, 32
  %2 = ashr i64 %1, 32
  %3 = ashr i64 %2, %b
  ret i64 %3
}
