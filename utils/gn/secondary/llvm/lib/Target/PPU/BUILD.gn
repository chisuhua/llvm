import("//llvm/utils/TableGen/tablegen.gni")

# PPU is the only target that has a "compress instr emitter", and it's
# a bit strange in that it defines static functions depending on which
# defines are set. Instead of housing these functions in one library,
# various libraries include the generated .inc file with different defines set.
tablegen("PPUGenCompressInstEmitter") {
  visibility = [
    ":LLVMPPUCodeGen",
    "AsmParser",
    "MCTargetDesc",
  ]
  args = [ "-gen-compress-inst-emitter" ]
  td_file = "PPU.td"
}

tablegen("PPUGenDAGISel") {
  visibility = [ ":LLVMPPUCodeGen" ]
  args = [ "-gen-dag-isel" ]
  td_file = "PPU.td"
}

tablegen("PPUGenGlobalISel") {
  visibility = [ ":LLVMPPUCodeGen" ]
  args = [ "-gen-global-isel" ]
  td_file = "PPU.td"
}

tablegen("PPUGenMCPseudoLowering") {
  visibility = [ ":LLVMPPUCodeGen" ]
  args = [ "-gen-pseudo-lowering" ]
  td_file = "PPU.td"
}

tablegen("PPUGenRegisterBank") {
  visibility = [ ":LLVMPPUCodeGen" ]
  args = [ "-gen-register-bank" ]
  td_file = "PPU.td"
}

static_library("LLVMPPUCodeGen") {
  deps = [
    ":PPUGenCompressInstEmitter",
    ":PPUGenDAGISel",
    ":PPUGenGlobalISel",
    ":PPUGenMCPseudoLowering",
    ":PPUGenRegisterBank",
    "MCTargetDesc",
    "TargetInfo",
    "Utils",
    "//llvm/include/llvm/Config:llvm-config",
    "//llvm/lib/CodeGen",
    "//llvm/lib/CodeGen/AsmPrinter",
    "//llvm/lib/CodeGen/SelectionDAG",
    "//llvm/lib/IR",
    "//llvm/lib/MC",
    "//llvm/lib/Support",
    "//llvm/lib/Target",
  ]
  include_dirs = [ "." ]
  sources = [
    "PPUAsmPrinter.cpp",
    "PPUCallLowering.cpp",
    "PPUExpandPseudoInsts.cpp",
    "PPUFrameLowering.cpp",
    "PPUISelDAGToDAG.cpp",
    "PPUISelLowering.cpp",
    "PPUInstrInfo.cpp",
    "PPUInstructionSelector.cpp",
    "PPULegalizerInfo.cpp",
    "PPUMCInstLower.cpp",
    "PPUMergeBaseOffset.cpp",
    "PPURegisterBankInfo.cpp",
    "PPURegisterInfo.cpp",
    "PPUSubtarget.cpp",
    "PPUTargetMachine.cpp",
    "PPUTargetObjectFile.cpp",
    "PPUTargetTransformInfo.cpp",
  ]
}

# This is a bit different from most build files: Due to this group
# having the directory's name, "//llvm/lib/Target/PPU" will refer to this
# target, which pulls in the code in this directory *and all subdirectories*.
# For most other directories, "//llvm/lib/Foo" only pulls in the code directly
# in "llvm/lib/Foo". The forwarding targets in //llvm/lib/Target expect this
# different behavior.
group("PPU") {
  deps = [
    ":LLVMPPUCodeGen",
    "AsmParser",
    "Disassembler",
    "MCTargetDesc",
    "TargetInfo",
    "Utils",
  ]
}
